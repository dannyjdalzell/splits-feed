name: OCR Splits

on:
  workflow_dispatch:
  schedule:
    # run every 15 minutes
    - cron: "*/15 * * * *"

permissions:
  contents: write

# prevent two OCR jobs from stepping on each other
concurrency:
  group: ocr_splits
  cancel-in-progress: false

env:
  TZ: America/Chicago
  OCR_PROFILES_FILE: scripts/ocr_profiles.yaml

jobs:
  ocr_splits:
    name: ocr_splits
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: System deps
        run: |
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr libtesseract-dev

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Python deps
        run: |
          python -m pip install --upgrade pip
          pip install pillow pytesseract opencv-python-headless numpy pandas pyyaml

      - name: Run OCR over images/
        env:
          PROFILES_PATH: ${{ env.OCR_PROFILES_FILE }}
        run: |
          set -euo pipefail
          python scripts/splits_ocr.py \
            --images-dir images \
            --profiles "$PROFILES_PATH" \
            --out-csv splits.csv

      # conflict-safe commit/push with retries
      - name: Commit & push CSV changes (conflict-safe, retry)
        shell: bash
        run: |
          set -euo pipefail

          # Stage file if it exists
          [ -f splits.csv ] && git add splits.csv || true

          # Nothing to commit? bail early
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git config user.name "splits-bot"
          git config user.email "actions@users.noreply.github.com"
          git commit -m "OCR: append new split rows"

          # pull --rebase + push with backoff to avoid push races
          n=0
          until [ $n -ge 5 ]; do
            if git pull --rebase --autostash && git push; then
              echo "Push OK"
              exit 0
            fi
            n=$((n+1))
            echo "Push race, retry $n/5â€¦"
            sleep $((2*n))
          done

          echo "Push still failing after retries"
          exit 1
