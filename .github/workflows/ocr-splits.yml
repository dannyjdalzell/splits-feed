      - name: Merge & push splits.csv without conflicts (dedupe, single header; with retries)
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "splits-bot"
          git config user.email "actions@users.noreply.github.com"

          # If nothing was produced, exit quietly
          [ -f splits.csv ] || { echo "No splits.csv present, nothing to push."; exit 0; }

          # Keep the rows we just produced
          cp -f splits.csv /tmp/local.csv

          header="timestamp,league,away_team,home_team,market,tickets_pct,handle_pct,line,source"

          attempt=0
          max_attempts=6
          while (( attempt < max_attempts )); do
            attempt=$((attempt+1))
            echo "::group::merge-push attempt ${attempt}/${max_attempts}"

            # Always start from the latest remote state
            git fetch --prune origin main

            # Build remote body snapshot (or empty)
            if git cat-file -e origin/main:splits.csv 2>/dev/null; then
              git show origin/main:splits.csv > /tmp/remote.csv
            else
              : > /tmp/remote.csv
            fi

            # Compose bodies (ensure files exist even if empty)
            { tail -n +2 /tmp/remote.csv 2>/dev/null || true; } > /tmp/remote.body
            { tail -n +2 /tmp/local.csv  2>/dev/null || true; } > /tmp/local.body

            # Create a clean tree exactly at origin/main so our commit base matches what we just read
            git reset --hard origin/main

            # Rebuild merged CSV (one header, remote first, then local, de-duped by full line)
            printf "%s\n" "$header" > splits.csv
            awk 'NR==FNR{ if(!($0 in s)){s[$0]=1; print $0}; next} { if(!($0 in s)){s[$0]=1; print $0} }' \
                /tmp/remote.body /tmp/local.body >> splits.csv

            # Stage whatever CSVs exist
            add_any=false
            for f in splits.csv splits_clean.csv splits_flagged.csv; do
              if [ -f "$f" ]; then git add "$f"; add_any=true; fi
            done

            if ! $add_any || git diff --cached --quiet; then
              echo "No changes to commit."
              echo "::endgroup::"
              exit 0
            fi

            git commit -m "OCR: append new split rows (merged, deduped)"

            # Try to push; if someone won the race, loop and re-merge on top of the new tip
            if git push --progress origin HEAD:main; then
              echo "Push OK"
              echo "::endgroup::"
              exit 0
            else
              echo "Push rejected (non-fast-forward). Re-merging on new remote tipâ€¦"
              echo "::endgroup::"
              sleep $((2*attempt))  # backoff
            fi
          done

          echo "Push still failing after ${max_attempts} attempts."
          exit 1
