name: Sheets Ingest (manual)

on:
  workflow_dispatch: {}   # button-only

permissions:
  contents: write

concurrency:
  group: sheets-ingest-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ingest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install gspread google-auth google-auth-httplib2 google-auth-oauthlib requests

      - name: Write service account JSON
        env:
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        run: |
          echo "$GOOGLE_SERVICE_ACCOUNT_JSON" > sa.json

      - name: Pull images listed in Google Sheet -> images/
        env:
          SPLITS_TWEETS_SHEET_ID: ${{ secrets.SPLITS_TWEETS_SHEET_ID }}
        run: |
          python <<'PY'
          import os, hashlib, requests, mimetypes
          import gspread

          SHEET_ID = os.environ["SPLITS_TWEETS_SHEET_ID"]
          SAVE_DIR = "images"
          os.makedirs(SAVE_DIR, exist_ok=True)

          # auth + open sheet (uses first worksheet by default)
          gc = gspread.service_account(filename="sa.json")
          sh = gc.open_by_key(SHEET_ID)
          ws = sh.sheet1
          rows = ws.get_all_records()  # list[dict]

          def safe_ext(url, content_type):
            # try to guess extension from URL or Content-Type
            # defaults to .png if unknown
            ext = ""
            if "." in url.rsplit("/", 1)[-1]:
              cand = url.rsplit("/", 1)[-1]
              if "." in cand:
                ext = "." + cand.rsplit(".", 1)[-1].split("?")[0].split("#")[0]
            if not ext or len(ext) > 5:
              ext = mimetypes.guess_extension(content_type or "") or ".png"
            return ext.lower()

          added = 0
          for r in rows:
            img = (r.get("image_url") or r.get("image") or r.get("img") or "").strip()
            if not img:
              continue

            # stable filename by hashing URL
            h = hashlib.sha256(img.encode("utf-8")).hexdigest()[:12]
            try:
              resp = requests.get(img, timeout=30)
              if resp.status_code != 200 or not resp.content:
                print(f"[WARN] bad response for {img} -> {resp.status_code}")
                continue
              ext = safe_ext(img, resp.headers.get("Content-Type", ""))
              out = os.path.join(SAVE_DIR, f"sheet_{h}{ext}")
              # skip if already exists with same size
              if os.path.exists(out) and os.path.getsize(out) == len(resp.content):
                continue
              with open(out, "wb") as f:
                f.write(resp.content)
              added += 1
              print(f"[INGEST] saved {out}")
            except Exception as e:
              print(f"[WARN] {img}: {e}")

          print(f"[INGEST] new images: {added}")
          PY

      - name: Commit & push any new images (triggers OCR Splits)
        run: |
          git config user.email "bot@local"
          git config user.name "splits-bot"

          git add images/* || true
          if ! git diff --cached --quiet; then
            git commit -m "[sheets][skip ci] ingest images from Google Sheet"
            git push
          else
            echo "No new images to commit"
          fi
